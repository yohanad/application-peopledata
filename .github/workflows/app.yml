name: Application

on: 
  push:
    branches:
      - main
    # types:    
    #   - completed

jobs:
  terraform:
    permissions:
      id-token: write
      contents: read
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_APP }}
          aws-region: us-east-1
      - name: Checkout
        uses: actions/checkout@v3

# Change to this
# - name: Set up AWS CLI
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-west-1 # Change this to your desired AWS region


  image-deployment:
      permissions:
        id-token: write
        contents: read
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Configure AWS Credentials
          id: config-credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            role-to-assume: ${{ secrets.AWS_ROLE_ARN_APP}}
            aws-region: us-east-1
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
        - name: Get latest tag from ECR
          id: get-latest-tag
          run: |
            LATEST_TAG=$(aws ecr describe-images --repository-name bw-repository --query 'images[].imageTag' --output text | sort -V | tail -n 1)
            echo "Latest Tag: $LATEST_TAG"
            echo "::set-output name=latest_tag::$LATEST_TAG"
        # - name: Increment tag number
        #   id: increment-tag
        #   run: |
        #     if [ -z "${{ steps.get-latest-tag.outputs.latest_tag }}" ]; then
        #       NEXT_TAG="v1"
        #     else
        #       LATEST_TAG="${{ steps.get-latest-tag.outputs.latest_tag }}"
        #       NEXT_TAG="v$((${{ LATEST_TAG#v }} + 1))"
        #     fi
        #     echo "::set-output name=next_tag::${NEXT_TAG}"
        #   - name: Build, tag, and push image to Amazon ECR
        #     id: build-image
        #     env:
        #       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #       ECR_REPOSITORY: "bw-repository"
        #       IMAGE_TAG: ${{ github.sha }}
        #     run: |
        #       docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        #       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG





